{
    "swagger": "2.0",
    "info": {
        "title": "GOVOBS - Golang Volunteasy Backend Service",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/users": {
            "post": {
                "description": "Checks if all the inputs creates a valid user. Also validates if there is already an account with the given document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Validate user input",
                "parameters": [
                    {
                        "description": "User data to be validated",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/request.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/request.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/request.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/request.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/request.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/request.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "target": {}
            }
        },
        "request.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {}
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}