@page "/orglogin"
@using Volunteasy.Core.DTOs
@using Volunteasy.Core.Enums
@using Volunteasy.Core.Services

@inject IMembershipService Memberships

<PageTitle>Escolha uma de suas organizações</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (Organizations == null)
            {
                <span>Buscando suas organizações</span>
            }
            else if (!Organizations.Any())
            {
                <span>Sem organizações</span>
            }
            else
            {
                <form action="/admin/auth/org" method="post">
                    <select name="organizationId">
                        @foreach (var org in Organizations)
                        {
                            <option value="@org.OrganizationId">@org.OrganizationName</option>
                        }
                    </select>
                    <button type="submit">Entrar</button>
                </form>
            }
    </Authorized>
</AuthorizeView>


@code {

    private List<OrganizationMember>? Organizations { get; set; }
    
    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var page = (long)0;

        var state = await AuthState;

        var claim = state.User.FindFirst("volunteasy_id");

        do
        {
            var (organizations, next) = await Memberships.ListMemberships(new MembershipFilter
            {
                MemberId = Convert.ToInt64(claim?.Value), Role = MembershipRole.Owner
            }, page);

            if (next == null)
                break;

            page = Convert.ToInt64(next);

            if (Organizations == null)
            {
                Organizations = organizations.ToList();
                continue;
            }
            
            Organizations.AddRange(organizations);
            
        } while (page == 0);
        
        await base.OnInitializedAsync();
    }

}